"================================================================"
"基础性配置"
"================================================================"

" 检测文件类型"
filetype on
" 针对不同的文件类型采用不同的缩进格式"
filetype indent on
" 允许插件"
filetype plugin on
" 自动识别文件类型，并根据文件类型加载不同的插件和缩进规则"
filetype plugin indent on

" 不创建备份文件，默认情况下，文件保存时，会额外创建一个备份文件，它的文件名是在原文件名的末尾，再添加一个波浪号"
set nobackup

" 不创建交换文件。交换文件主要用于系统崩溃时恢复文件，文件名的开头是.、结尾是.swp"
set noswapfile

" 鼠标"
set mouse=a
set selection=exclusive
set selectmode=mouse,key

" 修正 vim 删除/退格键行为"
" 原生的 vim 行为有点怪"
" 如果你在一行的开头切换到插入模式，这时按退格无法退到上一行"
" 如果你在一行的某一列切换到插入模式，这时按退格无法退删除这一列之前的字符"
" 如果你开启了 autoindent，按回车时 vim 会根据上一行自动缩进，这时按退格无法删除缩进字符"
" 通过设置 eol, start 和 indent 可以修正上述行为"
set backspace=eol,start,indent

" 文件修改之后自动载入"
set autoread

" 语法高亮"
set syntax=on

" 启用256色"
set t_Co=256

" 粘贴模式"
set paste

" 自动切换工作目录"
set autochdir

" 错误信息响铃，只对错误信息起作用"
set errorbells

" 出错时，发出视觉提示，通常是屏幕闪烁"
set visualbell

" Vim 需要记住多少次历史操作"
set history=1000





"================================================================"
"文件格式、编码"
"================================================================"

" 写入文件时采用的编码类型"
set fileencodings=utf-8,ucs-bom,gb18030,gbk,gb2312,cp936
" 输出到终端时采用的编码类型"
set termencoding=utf-8
" vim内部使用的编码类型 "
set encoding=utf-8




"================================================================"
"制表符、缩进"
"================================================================"

" 使 Vim 在创建新行的时候使用与上一行同样的缩进"
set autoindent
" 创建新行时使用智能缩进，主要用于 C 语言一类的程序。通常，打开 smartindent 时也应该打开 autoindent"
set smartindent
" 按下 Tab 键时用空格代替制表符"
set expandtab
" 设置文件里的制表符 (TAB) 的宽度（以空格的数量表示）"
set tabstop=4
" 设置移位操作 >> 或 << 的缩进长度（以空格的数量表示）"
set shiftwidth=4
" Tab 转为多少个空格"
set softtabstop=4




"================================================================"
"显示、格式化"
"================================================================"

" 显示行号"
set number

" 高亮当前行"
set cursorline

" 高亮匹配括号"
set showmatch

" 代码折叠"
set foldenable
set foldmethod=marker
set foldlevel=99
set foldclose=all

" 设置行宽，即一行显示多少个字符"
set textwidth=120

" 自动折行，即太长的行分成几行显示"
set wrap

" 只有遇到指定的符号（比如空格、连词号和其他标点符号），才发生折行。也就是说，不会在单词内部折行"
set linebreak

" 指定折行处与编辑窗口的右边缘之间空出的字符数"
set wrapmargin=8

" 如果行尾有多余的空格（包括 Tab 键），该配置将让这些空格显示成可见的小方块"
set listchars=tab:»■,trail:■
set list

" 打开英语单词的拼写检查"
"set spell spelllang=en_us"





"================================================================"
"浏览、滚动"
"================================================================"

" 垂直滚动时，光标距离顶部/底部的位置（单位：行）"
set scrolloff=5

" 水平滚动时，光标距离行首或行尾的位置（单位：字符）。该配置在不折行时比较有用"
set sidescrolloff=15




"================================================================"
"搜索"
"================================================================"

" 高亮搜索内容的所有匹配位置"
set hlsearch
" 输入搜索模式时，每输入一个字符，就自动跳到第一个匹配的结果"
set incsearch
" 搜索时忽略大小写"
set ignorecase
" 如果同时打开了 ignorecase 那么对于只有一个大写字母的搜索词，将大小写敏感；其他情况都是大小写不敏感"
set smartcase




"================================================================"
"状态栏"
"================================================================"

" 总是显示状态栏"
set laststatus=2

" 在状态栏显示光标的当前位置（位于哪一行哪一列）"
set ruler

" 在底部显示，当前处于命令模式还是插入模式"
set showmode

" 命令模式下，在底部显示，当前键入的指令"
" 比如，键入的指令是2y3d，那么底部就会显示2y3，当键入d的时候，操作完成，显示消失"
set showcmd

" 命令模式下，底部操作指令按下 Tab 键自动补全"
" 第一次按下 Tab，会显示所有匹配的操作指令的清单；第二次按下 Tab，会依次选择各个指令"
set wildmenu
set wildmode=longest:list,full
